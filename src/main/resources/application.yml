server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/evently-db
    username: postgres
    password: klu@321
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: EventlyHikariPool
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      auto-commit: false

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    "open-in-view": false

  data:
    redis:
      host: localhost
      port: 6379
      # password: ""
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          "max-active": 50
          "max-idle": 10
          "min-idle": 5
          "max-wait": 2000ms

  cache:
    type: redis
    redis:
      "time-to-live": 300000
      "cache-null-values": false

  flyway:
    enabled: true
    locations: classpath:db/migration
    "baseline-on-migrate": true
    mixed: true
    "validate-on-migrate": true

  kafka:
    "bootstrap-servers": localhost:9092
    consumer:
      "group-id": evently-consumer-group
      "auto-offset-reset": earliest
      "enable-auto-commit": false
      "key-deserializer": org.apache.kafka.common.serialization.StringDeserializer
      "value-deserializer": org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        "[spring.json.trusted.packages]": "com.atlan.evently.dto,com.atlan.evently.event"
        "[isolation.level]": read_committed
        "[max.poll.records]": 100
        "[fetch.min.bytes]": 1024
    producer:
      "key-serializer": org.apache.kafka.common.serialization.StringSerializer
      "value-serializer": org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        "[linger.ms]": 5
        "[batch.size]": 16384
        "[compression.type]": lz4
        "[enable.idempotence]": true
    listener:
      "ack-mode": manual
      concurrency: 3

  main:
    "banner-mode": off

# Application-specific configuration
evently:
  cache:
    events:
      ttl: 300
    "event-details":
      ttl: 600
  booking:
    "max-tickets-per-request": 10
    "cancellation-deadline-hours": 2
  notifications:
    enabled: true
    topics:
      "booking-events": "booking-events"
      "waitlist-events": "waitlist-events"
      "analytics-events": "analytics-events"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,caches,configprops
  endpoint:
    health:
      "show-details": when_authorized
    metrics:
      access: unrestricted
  prometheus:
    metrics:
      export:
        enabled: true
  info:
    env:
      enabled: true

logging:
  level:
    "[com.atlan.evently]": INFO
    "[org.springframework.cache]": DEBUG
    "[org.springframework.kafka]": INFO
    "[com.zaxxer.hikari]": INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"

---

# Production Profile
spring:
  config:
    activate:
      "on-profile": production

  datasource:
    hikari:
      "maximum-pool-size": 100
      "minimum-idle": 20
      "leak-detection-threshold": 30000

  data:
    redis:
      lettuce:
        pool:
          "max-active": 100
          "max-idle": 20

  cache:
    redis:
      "time-to-live": 600000

  flyway:
    mixed: true
    "out-of-order": true

logging:
  level:
    "[com.atlan.evently]": INFO
    root: WARN
  file:
    name: logs/evently.log

---

# Development Profile
spring:
  config:
    activate:
      "on-profile": development

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  flyway:
    "clean-disabled": false

logging:
  level:
    "[com.atlan.evently]": DEBUG
    "[org.springframework.cache]": DEBUG
    "[org.springframework.kafka]": DEBUG
    "[org.springframework]": DEBUG
    "[org.hibernate]": DEBUG

